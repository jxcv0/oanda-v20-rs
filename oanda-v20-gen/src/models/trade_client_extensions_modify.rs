/*
 * OANDA v20 API
 *
 * The full OANDA v20 API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TradeClientExtensionsModify : A TradeClientExtensionsModifyTransaction represents the modification of a Trade's Client Extensions.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TradeClientExtensionsModify {
    /// The ID of the Trade who's client extensions are to be modified.
    #[serde(rename = "tradeID", skip_serializing_if = "Option::is_none")]
    pub trade_id: Option<i32>,
    /// The original Client ID of the Trade who's client extensions are to be modified.
    #[serde(rename = "clientTradeID", skip_serializing_if = "Option::is_none")]
    pub client_trade_id: Option<String>,
    #[serde(rename = "tradeClientExtensionsModify", skip_serializing_if = "Option::is_none")]
    pub trade_client_extensions_modify: Option<Box<models::ClientExtensions>>,
}

impl TradeClientExtensionsModify {
    /// A TradeClientExtensionsModifyTransaction represents the modification of a Trade's Client Extensions.
    pub fn new() -> TradeClientExtensionsModify {
        TradeClientExtensionsModify {
            trade_id: None,
            client_trade_id: None,
            trade_client_extensions_modify: None,
        }
    }
}

